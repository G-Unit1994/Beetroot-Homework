                                        // Normal
// 1) Запитай у користувача його вік і визначи, ким він є: дитиною (0-11), підлітком (12-17), дорослим (18_59) або пенсіонером (60 ...), передбач можливість введення невірних даних.
var age = parseInt(prompt("Введіть свій вік:"));

if (!isNaN(age) && age >= 0) {
    if (age >= 0 && age <= 11) {
        alert("Ви є дитиною.");
    } else if (age >= 12 && age <= 17) {
        alert("Ви є підлітком.");
    } else if (age >= 18 && age <= 59) {
        alert("Ви є дорослим.");
    } else {
        alert("Ви є пенсіонером.");
    }
} else {
    alert("Введений вік некоректний.");
}

// 2)Запитай у користувача число від 0 до 9 і виведи йому спецсимвол, який розташований на цій клавіші (1 !, 2 @, 3 # і т. д).
var number = parseInt(prompt("Введіть число від 0 до 9:"));

if (!isNaN(number) && number >= 0 && number <= 9) {
    var specialSymbols = ["!", "@", "#", "$", "%", "^", "&", "*", "("];
    var symbol = specialSymbols[number-1];
    alert("Спецсимвол для числа " + number + " - " + symbol);
} else {
    alert("Введене число не відповідає умові (введіть число від 0 до 9).");
}

// Підрахуй суму всіх чисел в заданому користувачем діапазоні.
var startNumber = parseInt(prompt("Введіть початкове число діапазону:"));
var endNumber = parseInt(prompt("Введіть кінцеве число діапазону:"));

if (!isNaN(startNumber) && !isNaN(endNumber) && startNumber <= endNumber) {
    var sum = 0;
    for (var i = startNumber; i <= endNumber; i++) {
        sum += i;
    }
    alert("Сума чисел у діапазоні від " + startNumber + " до " + endNumber + " дорівнює " + sum);
} else {
    alert("Введені числа некоректні або початкове число більше за кінцеве.");
}

// 4) Запитай у користувача 2 числа і знайди найбільший спільний дільник.
var number1 = parseInt(prompt("Введіть перше число:"));
var number2 = parseInt(prompt("Введіть друге число:"));

// Перевірте, чи введені дані є числами
if (!isNaN(number1) && !isNaN(number2)) {
    // Функція для знаходження НСД
    function findGCD(a, b) {
        if (!b) {
            return a;
        }
        return findGCD(b, a % b);
    }

    // Виклик функції та виведення результату
    var gcd = findGCD(number1, number2);
    alert("Найбільший спільний дільник для чисел " + number1 + " і " + number2 + " дорівнює " + gcd);
} else {
    alert("Введені значення не є числами.");
}

// 5)Запитай у користувача число і виведи всі дільники цього числа.
var number = parseInt(prompt("Введіть число:"));

// Перевірте, чи введене значення є числом
if (!isNaN(number)) {
    // Створіть порожній масив для зберігання дільників
    var divisors = [];

    // Знайдіть всі дільники числа
    for (var i = 1; i <= number; i++) {
        if (number % i === 0) {
            divisors.push(i); // Додаємо дільник до масиву
        }
    }

    // Виведення результату
    alert("Дільники числа " + number + " - " + divisors.join(", "));
} else {
    alert("Введене значення не є числом.");
}


// Normal
// 1)Запитай у користувача п’ятирозрядне число і визначи, чи є воно паліндромом.
var number = parseInt(prompt("Введіть п'ятизначне число:"));
if (!isNaN(number) && number >= 10000 && number <= 99999) {
    // Розбиваємо число на окремі цифри
    var digit1 = Math.floor(number / 10000);
    var digit2 = Math.floor((number % 10000) / 1000);
    var digit4 = Math.floor((number % 100) / 10);
    var digit5 = number % 10;

    // Перевірка, чи є число паліндромом
    if (digit1 === digit5 && digit2 === digit4) {
        alert("Число " + number + " є паліндромом.");
    } else {
        alert("Число " + number + " не є паліндромом.");
    }
} else {
    alert("Введене значення не є п'ятирозрядним числом.");
}

// Запитай у користувача суму покупки і виведи суму до оплати зі знижкою:
// від 200 до 300 - знижка буде 3%; 
// від 300 до 500 - 5%;
// від 500 і вище - 7%.
var purchaseAmount = parseFloat(prompt("Введіть суму покупки:"));

// Перевірка, чи введене значення є числом та чи є додатнім числом
if (!isNaN(purchaseAmount) && purchaseAmount > 0) {
    var discount = 0; // Початкова величина знижки

    // Розрахунок знижки відповідно до суми покупки
    if (purchaseAmount >= 200 && purchaseAmount < 300) {
        discount = 0.03; // 3% знижка
    } else if (purchaseAmount >= 300 && purchaseAmount < 500) {
        discount = 0.05; // 5% знижка
    } else if (purchaseAmount >= 500) {
        discount = 0.07; // 7% знижка
    }

    // Розрахунок суми до оплати з урахуванням знижки
    var amountToPay = purchaseAmount * (1 - discount);

    // Виведення результату
    alert("Сума покупки: " + purchaseAmount.toFixed(2) + " грн\nЗнижка: " + (discount * 100) + "%\nСума до оплати зі знижкою: " + amountToPay.toFixed(2) + " грн");
} else {
    alert("Введене значення не є додатнім числом.");
}

// 3)Запитай у користувача 10 чисел і порахуй, скільки він ввів додатніх, від’ємних і нулів. При цьому також порахуй, скільки з них парних і непарних. Виведи статистику на екран. Враховуй, що достатньо однієї змінної (не 10) для введення чисел користувачем.
var numbersCount = 10;

// Змінні для підрахунку кількості додатних, від'ємних, нулів, парних і непарних чисел
var positiveCount = 0;
var negativeCount = 0;
var zeroCount = 0;
var evenCount = 0;
var oddCount = 0;

// Запитайте користувача на введення чисел
for (var i = 0; i < numbersCount; i++) {
    var number = parseFloat(prompt("Введіть число " + (i + 1) + ":"));

    // Перевірка на додатнє число
    if (!isNaN(number)) {
        if (number > 0) {
            positiveCount++;
        } else if (number < 0) {
            negativeCount++;
        } else {
            zeroCount++;
        }

        // Перевірка на парність
        if (number !== 0 && number % 2 === 0) {
            evenCount++;
        } else if (number !== 0) {
            oddCount++;
        }
    } else {
        alert("Введено некоректне число. Будь ласка, введіть число знову.");
        i--; // Зменшуємо лічильник, щоб користувач ввів число знову
    }
}

// Виведення статистики на екран
alert("Додатні числа: " + positiveCount +
    "\nВід'ємні числа: " + negativeCount +
    "\nНулі: " + zeroCount +
    "\nПарні числа: " + evenCount +
    "\nНепарні числа: " + oddCount);

// Зацикли відображення днів тижня таким чином: «День тижня. Хочеш побачити наступний день? » і так до тих пір, поки користувач натискає OK. 
// Масив з назвами днів тижня
var daysOfWeek = ['Понеділок', 'Вівторок', 'Середа', 'Четвер', 'П’ятниця', 'Субота', 'Неділя'];

// Змінна для зберігання індексу поточного дня тижня
var currentDayIndex = 0;

// Зациклюємо відображення днів тижня
while (confirm(daysOfWeek[currentDayIndex] + '. Хочеш побачити наступний день?')) {
    currentDayIndex++; // Збільшуємо індекс поточного дня для відображення наступного дня

    // Якщо індекс стає більшим за кількість днів у масиві, повертаємо його до початку
    if (currentDayIndex >= daysOfWeek.length) {
        currentDayIndex = 0;
    }
}

alert('Дякую за участь!'); // Виведення повідомлення після завершення циклу

// Maximum
// 1) 1) Гра «Вгадай число». Запропонуй користувачеві загадати число від 0 до 100 і відгадай його наступним способом: кожну ітерацію циклу діли діапазон чисел навпіл, записуй результат в N і питай у користувача «Ваше число> N, <N або == N?». Залежно від того що вказав користувач, зменшуй діапазон. Початковий діапазон від 0 до 100, поділи навпіл і отримай 50. Якщо користувач вказав, що його число> 50, то зміни діапазон на від 50 до 100. І так до тих пір, поки користувач не вибере == N (буде корисним почитати про алгоритм: "бінарний пошук").
var min = 0; // Мінімальне значення діапазону
var max = 100; // Максимальне значення діапазону
var guessed = false; // Змінна для позначення, чи вгадане число
var guessCount = 0; // Змінна для підрахунку кількості спроб

alert("Загадайте число від " + min + " до " + max);

while (!guessed) {
    var guess = Math.floor((min + max) / 2); // Знаходимо середину діапазону

    var answer = prompt("Ваше число > " + guess + ", < " + guess + " або == " + guess + "? Введіть '>', '<' або '='");

    if (answer === '=') {
        guessed = true;
        alert("Вітаю! Ви вгадали число " + guess + " за " + guessCount + " спроб.");
    } else if (answer === '>') {
        min = guess + 1; // Зміщуємо мінімальне значення
    } else if (answer === '<') {
        max = guess - 1; // Зміщуємо максимальне значення
    } else {
        alert("Будь ласка, введіть коректну відповідь ('>', '<' або '=')");
    }

    guessCount++; // Збільшуємо кількість спроб
}

// 2) Виведи таблицю множення для всіх чисел від 2 до 9. Кожне число необхідно помножити на числа від 1 до 10.
for (var i = 2; i <= 9; i++) {
    console.log("Таблиця множення для " + i + ":");

    // Цикл для множення кожного числа на числа від 1 до 10
    for (var j = 1; j <= 10; j++) {
        var result = i * j;
        alert(i + " * " + j + " = " + result);
    }
    alert(""); // Порожній рядок для розділення таблиць множення
}

// 3)Запитай дату (день, місяць, рік) і виведи наступну за нею дату. Враховуй можливість переходу на наступний місяць, рік, а також високосний рік.
function isLeapYear(year) {
    return (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);
}

// Запитай користувача про день, місяць і рік
var day = parseInt(prompt("Введіть день:"));
var month = parseInt(prompt("Введіть місяць (від 1 до 12):"));
var year = parseInt(prompt("Введіть рік:"));

// Функція для знаходження наступної за датою
function getNextDate(day, month, year) {
    var daysInMonth = [31, isLeapYear(year) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

    // Перевірка на коректність введених даних
    if (month < 1 || month > 12 || day < 1 || day > daysInMonth[month - 1]) {
        return "Некоректна дата";
    }

    day++; // Збільшуємо день на 1

    // Перевіряємо, чи не вийшли за межі місяця
    if (day > daysInMonth[month - 1]) {
        day = 1;
        month++; // Переходимо на наступний місяць

        // Перевіряємо, чи не вийшли за межі року
        if (month > 12) {
            month = 1;
            year++; // Переходимо на наступний рік
        }
    }

    return day + "." + month + "." + year; // Повертаємо наступну за датою дату
}

var nextDate = getNextDate(day, month, year);
alert("Наступна за введеною дата: " + nextDate);